'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = logo;

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function logo(pure) {
  var React = pure.React;
  var PropTypes = pure.PropTypes;
  var defaults = pure.defaults;


  return pure({ displayName: 'Logo',
    propTypes: { styles: PropTypes.object.isRequired,
      theme: PropTypes.object.isRequired
    },
    defaultProps: defaults,
    init: function init() {
      var _this = this;

      this._getIconStyle = function () {
        var isBusy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        var _props = _this.props;
        var styles = _props.styles;
        var theme = _props.theme;

        return (0, _classnames2.default)(styles.logoIcon, theme.logoIcon, 'fa', 'fa-circle-o-notch', 'fa-spin');
      };

      this.notBusy = function () {
        _this.icon.style.animationPlayState = 'paused';
      };

      this.busy = function () {
        _this.icon.style.animationPlayState = 'running';
      };
    },
    componentDidMount: function componentDidMount() {
      this.notBusy();
    },
    render: function render() {
      var _this2 = this;

      var _props2 = this.props;
      var styles = _props2.styles;
      var theme = _props2.theme;
      var busy = _props2.busy;

      var dockLogoClass = (0, _classnames2.default)(styles.dockLogo, theme.dockLogo);
      var overlayIconClass = (0, _classnames2.default)(styles.overlay, theme.overlay, styles.iconWrap, theme.iconWrap);
      var overlayTextClass = (0, _classnames2.default)(styles.overlay, theme.overlay, styles.textWrap, theme.textWrap);
      var textClass = (0, _classnames2.default)(styles.logoText, theme.logoText);
      return React.createElement(
        'span',
        { className: dockLogoClass },
        React.createElement(
          'span',
          { className: overlayIconClass },
          React.createElement('i', { ref: function ref(x) {
              return _this2.icon = x;
            }, className: this._getIconStyle() })
        ),
        React.createElement(
          'span',
          { className: overlayTextClass },
          React.createElement(
            'span',
            { className: textClass },
            '\u2233'
          )
        )
      );
    }
  });
}